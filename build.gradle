buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.18.0')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'


group = 'com.mood.flux'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
    compile('tk.mybatis:mapper-spring-boot-starter:1.1.4')
//	compile('com.alibaba:druid-spring-boot-starter:1.1.9')
    compile('com.github.pagehelper:pagehelper-spring-boot-starter:1.2.3')
    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
// https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
//    compile('io.springfox:springfox-swagger2:2.8.0','io.springfox:springfox-swagger-ui:2.8.0')

    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
}
/**
 * name 用于容器的名称，可以包括一个标签
 * tags 一组标签参数，在应用标签之前，name 中的标签都会被剥离;默认为空集（可选）
 * dockfile 用于构建镜像Dockerfile文件，默认为 project.file('Dockerfile') 且必须是一个文件对象（可选）
 * files 需要包含在 Docker 上下文中的文件列表（可选）
 * buildArgs 一个键值都为 String 的 Map 集合，将为 build 命令设置 --build-arg 参数（可选）
 * labels 一个键值都为 String 的 Map 集合，将为 build 命令设置 --label 参数，默认为空（可选）
 * pull 是否在构建前拉取最新的基础镜像，默认为 false 。（可选）
 * noCache 是否在构建时设置 --no-cache 参数，从头开始构建镜像;默认为 false 。
 */
docker {
    dockerfile file('DockerFile') //DockerFile路径
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}
